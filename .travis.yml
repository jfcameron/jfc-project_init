# Â© 2020 Joseph Cameron - All Rights Reserved
# jfc-project_init ci script

dist: bionic 
sudo: required
language: cpp

matrix:
  include:
    # Build scripts
    - os: linux
      name: build linux gcc
      compiler: gcc-8
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - cmake
            - git
            - gcc-8
            - g++-8
      script:
        - |
          export CC=/usr/bin/gcc-8
          export CXX=/usr/bin/g++-8
          cmake .. -DJFC_BUILD_DOCS=OFF #-DCMAKE_CXX_FLAGS="-pedantic -Wall -Wextra -Ofast -flto -funroll-loops -m64 -march=native"
          cmake --build .
          ctest --extra-verbose

    - os: osx
      name: build macos clang
      osx_image: xcode12.2
      compiler: clang
      script:
        - |
          cmake .. -DJFC_BUILD_DOCS=OFF #-DCMAKE_CXX_FLAGS="-pedantic -Weverything -Wno-c++98-compat -Wno-padded -Ofast -flto -funroll-loops -m64 -march=native -std=c++17 -stdlib=libc++"
          cmake --build .
          ctest --extra-verbose

    - os: windows
      name: build windows msvc
      compiler: MSVC
      script: 
        - |
          cmake .. #-DJFC_BUILD_DOCS=OFF #-DCMAKE_CXX_FLAGS=" /W4 /EHsc /WX /std:c++17 /permissive-"
          cmake --build .

before_script: 
  - |
    CURRENT_COMMIT_HASH="$(git rev-parse HEAD)"
    cd workspace
    git submodule update --init --recursive

